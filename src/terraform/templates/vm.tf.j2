# EC2 Instance for {{ spec.framework|default('application') }}
resource "aws_instance" "main" {
  ami           = data.aws_ami.ubuntu.id
  instance_type = "{{ spec.instance_type|default('t3.micro') }}"
  subnet_id     = aws_subnet.public.id
  vpc_security_group_ids = [aws_security_group.main.id]
  
  {% if spec.key_pair_required %}
  key_name = aws_key_pair.main.key_name
  {% endif %}
  
  root_block_device {
    volume_type = "gp3"
    volume_size = {{ spec.storage_gb|default(20) }}
    encrypted   = {{ spec.security.encryption_at_rest|default(false)|lower }}
  }
  
  user_data = base64encode(<<-EOF
{{ spec.user_data_script|default('#!/bin/bash\necho "Hello World"')|indent(4, True) }}
  EOF
  )
  
  tags = {
    Name        = "{{ spec.framework|default('app') }}-instance"
    Environment = "{{ spec.environment|default('dev') }}"
    Framework   = "{{ spec.framework|default('app') }}"
    ManagedBy   = "AutoDeploy"
  }
}

# AMI Data Source for Ubuntu
data "aws_ami" "ubuntu" {
  most_recent = true
  owners      = ["099720109477"] # Canonical
  
  filter {
    name   = "name"
    values = ["ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*"]
  }
  
  filter {
    name   = "virtualization-type"
    values = ["hvm"]
  }
}

{% if spec.key_pair_required %}
# Key Pair for SSH access
resource "aws_key_pair" "main" {
  key_name   = "{{ spec.framework|default('app') }}-keypair"
  public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC7... # Replace with your public key"
  
  tags = {
    Name = "{{ spec.framework|default('app') }}-keypair"
  }
}
{% endif %}

{% if spec.security.backup_enabled %}
# EBS Snapshot for backup
resource "aws_ebs_snapshot" "main" {
  volume_id   = aws_instance.main.root_block_device.0.volume_id
  description = "Backup snapshot for {{ spec.framework|default('app') }}"
  
  tags = {
    Name = "{{ spec.framework|default('app') }}-backup"
  }
}
{% endif %}