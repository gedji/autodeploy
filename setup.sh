#!/bin/bash
# AutoDeploy Setup Script

echo "üöÄ AutoDeploy Setup Script"
echo "=========================="

# Check if Docker is installed
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker is not installed. Please install Docker and Docker Compose first."
    exit 1
fi

# Check if Docker Compose is installed
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose is not installed. Please install Docker Compose first."
    exit 1
fi

# Copy environment file if it doesn't exist
if [ ! -f .env ]; then
    echo "üìÑ Creating .env file from template..."
    cp .env.example .env
    echo "‚úÖ .env file created. Please edit it and add your OpenAI API key."
else
    echo "‚úÖ .env file already exists."
fi

# Check if OpenAI API key is set
if [ -f .env ]; then
    if grep -q "your-openai-api-key-here" .env; then
        echo "‚ö†Ô∏è  Please edit .env and replace 'your-openai-api-key-here' with your actual OpenAI API key."
        exit 1
    fi
fi

# Start services
echo "üê≥ Starting Docker services..."
docker-compose up -d

# Wait a moment for services to start
echo "‚è≥ Waiting for services to start..."
sleep 10

# Check if services are running
if docker-compose ps | grep -q "Up"; then
    echo "‚úÖ Services are running!"
    echo ""
    echo "üéâ Setup complete! You can now use AutoDeploy:"
    echo ""
    echo "Examples:"
    echo "  docker-compose exec app python src/main.py \"Deploy a Node.js app on AWS\""
    echo "  docker-compose exec app python src/main.py --interactive"
    echo "  docker-compose exec app python src/main.py --dry-run \"Create a Python API\""
    echo ""
else
    echo "‚ùå Some services failed to start. Please check the logs:"
    echo "  docker-compose logs"
fi
